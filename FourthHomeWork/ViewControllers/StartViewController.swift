//
//  ViewController.swift
//  FourthHomeWork
//
//  Created by –ï–≤–≥–µ–Ω–∏–π –®–µ–≤—á–µ–Ω–∫–æ on 23.10.2020.
//

import UIKit

class StartViewController: UIViewController {

    @IBOutlet weak var userNameTextField: UITextField!
    @IBOutlet weak var passwordTextField: UITextField!
    
    // –ü–æ–Ω–∏–º–∞—é —á—Ç–æ —ç–∫–∑–µ–º–ø–ª—è—Ä—É –º–æ–¥–µ–ª–∏ –∑–¥–µ—Å—å –Ω–µ –º–µ—Å—Ç–æ. –ú–æ–∑–≥ —É–∂–µ –æ—Ç–∫–∞–∑–∞–ª.
    let user = User(
        name: "Sheva",
        password: "2020",
        fullName: "Evgeniy Shevchenko",
        aboutUser:  """
                       –û —Å–µ–±–µ –ø–∞—Ä—É —Å–ª–æ–≤. –ú–Ω–µ 24, –±—ã–≤—à–∏–π —Å–ø–æ—Ä—Ç—Å–º–µ–Ω. –ü–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ —Å–æ —Å–ø–æ—Ä—Ç–æ–º –Ω–µ —É–¥–∞–ª–æ—Å—å,
                       —Ä–µ—à–∏–ª –ø–æ—Ç—Ä—É–¥–∏—Ç—Å—è –Ω–∞ –ø–æ–ª—å–∑—É –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–∞. –ü–æ–Ω—è–ª —á—Ç–æ —ç—Ç–æ —à–ª—è–ø–∞ –µ—â—ë —Ç–∞. –¢–∞–∫ –∫–∞–∫ —Å –¥–µ—Ç—Å–≤—Ç–∞
                       –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª—Å—è –∫–æ–º–ø—å—é—Ç–µ—Ä–∞–º–∏ (–∂–µ–ª–µ–∑–æ–º) –∑–∞—Ö–æ—Ç–µ–ª–æ—Å—å —Å–æ–∑–¥–∞–≤–∞—Ç—å –ü–û –Ω–∞ IOS.
                       –¢–µ–ø–µ—Ä—å —è –∑–¥–µ—Å—å. –ò –µ—â—ë –Ω–µ –º–æ–≥—É –ø–æ–Ω—è—Ç—å –ø–æ—á–µ–º—É –∫–∞—Ä—Ç–∏–Ω–∫–∞ –Ω–µ –∫–≥—Ä—É–ª–∞—è üòî
                    """,
        plans: """
                  –ú–æ–∏ –ø–ª–∞–Ω—ã –Ω–∞ –±—É–¥—É—â–∏–µ —ç—Ç–æ –ø–æ–ª—É—á–∏—Ç—å —Ö–æ—Ä–æ—à–∏–µ –∑–Ω–∞–Ω–∏—è —Å
                  –ø–æ–º–æ—â—å—é –ª—É—á—à–µ–≥–æ –ø—Ä–µ–ø–æ–¥–æ–≤–∞—Ç–µ–ª—è –ê–ª–µ–∫—Å–µ—è ü§£
               """
    )
    
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        setGradientForView()
        configureTextFields()
    }
    
    // MARK: Segue
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        let tabBarController = segue.destination as! UITabBarController
        
        let welcomeVC = tabBarController.viewControllers?.first as! WelcomeViewController
        welcomeVC.userName = user.name
        
        let aboutVC = tabBarController.viewControllers?[1] as! AboutMeViewController
        aboutVC.newAboutMe = user.aboutUser
        
        let navcont = tabBarController.viewControllers?.last as! UINavigationController
        let plansVC = navcont.viewControllers.first as! PlansViewController
        plansVC.fullName = user.fullName
        plansVC.plans = user.plans
    }
    
    // MARK: TouchesBegan
    override func touchesBegan(_ touches: Set<UITouch>, with event: UIEvent?) {
        view.endEditing(true)
    }
    
    // MARK: LogInButtonAction
    @IBAction func logInAction() {
        
        guard userNameTextField.text != "" else {
            showAlert(with: "‚ùóÔ∏è", and: "Enter your username")
            return
        }
        guard passwordTextField.text != "" else {
            showAlert(with: "‚ùóÔ∏è", and: "Enter password")
            return
        }
        guard userNameTextField.text == user.name else {
            showAlert(with: "‚ÄºÔ∏è", and: "Please enter the correct username")
            userNameTextField.text = ""
            return
        }
        guard passwordTextField.text == user.password else {
            showAlert(with: "‚ÄºÔ∏è", and: "Incorrect password")
            passwordTextField.text = ""
            return
        }
        performSegue(withIdentifier: "presentModally", sender: nil)
        userNameTextField.text = ""
        passwordTextField.text = ""
    }
    

    
    // MARK: forgotButtonAction
    @IBAction func forgotButtonAction(_ sender: UIButton) {
        switch sender.tag {
        case 1: showAlert(with: "User Name", and: user.name)
        case 2: showAlert(with: "Password", and: user.password)
        default: break
        }
    }
    
    // MARK: UnwideSegue
    @IBAction func unwide(segue: UIStoryboardSegue) {
    }
    
    // MARK: AlertController
    private func showAlert(with title: String, and message: String) {
        
        let alertController = UIAlertController(title: title,
                                                message: message,
                                                preferredStyle: .alert)
        
        let okAction = UIAlertAction(title: "–û–ö", style: .default)
        alertController.addAction(okAction)
        present(alertController, animated: true)
    }
    
    // MARK: UITextFieldDelegate
    private func configureTextFields() {
        userNameTextField.delegate = self
        passwordTextField.delegate = self
    }
    
    // MARK: SetGradient
    private func setGradientForView() {
        let gradient = CAGradientLayer()

        gradient.colors = [
          UIColor(red: 0.596, green: 0.584, blue: 0.937, alpha: 1).cgColor,
          UIColor(red: 0.937, green: 0.761, blue: 0.843, alpha: 1).cgColor
        ]

        gradient.locations = [0, 1]
        gradient.startPoint = CGPoint(x: 0.25, y: 0.5)
        gradient.endPoint = CGPoint(x: 0.75, y: 0.5)
        gradient.transform = CATransform3DMakeAffineTransform(
            CGAffineTransform(a: 1, b: 1, c: -1, d: 1.31, tx: 0.5, ty: -0.65)
        )
        gradient.bounds = view.bounds.insetBy(dx: -0.5*view.bounds.size.width,
                                              dy: -0.5*view.bounds.size.height)

        gradient.position = view.center
        view.layer.insertSublayer(gradient, at: 0)
    }

}

extension StartViewController: UITextFieldDelegate {
    func textFieldShouldReturn(_ textField: UITextField) -> Bool {
        switch textField {
        case userNameTextField:
            userNameTextField.resignFirstResponder()
            passwordTextField.becomeFirstResponder()
        case passwordTextField:
            logInAction()
        default:
            break
        }
        return true
    }
}
